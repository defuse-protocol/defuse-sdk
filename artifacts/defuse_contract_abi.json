{
  "schema_version": "0.4.0",
  "metadata": {
    "name": "defuse-contract",
    "version": "0.1.0",
    "build": {
      "compiler": "rustc 1.80.0",
      "builder": "cargo-near cargo-near-build 0.1.1"
    },
    "wasm_hash": "D7bewhihuYy4puokTW8MrAnFAJ4C3Daz2kg7dbUYhTm9"
  },
  "body": {
    "functions": [
      {
        "name": "acl_add_admin",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      {
        "name": "acl_add_super_admin",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      {
        "name": "acl_get_admins",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "skip",
              "type_schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            {
              "name": "limit",
              "type_schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AccountId"
            }
          }
        }
      },
      {
        "name": "acl_get_grantees",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "skip",
              "type_schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            {
              "name": "limit",
              "type_schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AccountId"
            }
          }
        }
      },
      {
        "name": "acl_get_permissioned_accounts",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/PermissionedAccounts"
          }
        }
      },
      {
        "name": "acl_get_super_admins",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "skip",
              "type_schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            {
              "name": "limit",
              "type_schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AccountId"
            }
          }
        }
      },
      {
        "name": "acl_grant_role",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      {
        "name": "acl_has_any_role",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "roles",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "acl_has_role",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "acl_init_super_admin",
        "kind": "call",
        "modifiers": [
          "private"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "acl_is_admin",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "acl_is_super_admin",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "acl_renounce_admin",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "acl_renounce_role",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "acl_revoke_admin",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      {
        "name": "acl_revoke_role",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "role",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      {
        "name": "acl_revoke_super_admin",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      {
        "name": "acl_role_variants",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      {
        "name": "acl_storage_prefix",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        }
      },
      {
        "name": "acl_transfer_super_admin",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      {
        "name": "add_full_access_key",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "public_key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "add_public_key",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "public_key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        }
      },
      {
        "name": "add_relayer_key",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "public_key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "contract_source_metadata",
        "kind": "view"
      },
      {
        "name": "delete_key",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "public_key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "delete_relayer_key",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "public_key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "execute_intents",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "intents",
              "type_schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/SignedPayload_for_MultiStandardPayload"
                }
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "null"
          }
        }
      },
      {
        "name": "fee",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Pips"
          }
        }
      },
      {
        "name": "fee_collector",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/AccountId"
          }
        }
      },
      {
        "name": "ft_on_transfer",
        "doc": " Deposit fungible tokens.\n\n `msg` contains [`AccountId`] of the internal recipient.\n Empty `msg` means deposit to `sender_id`",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "sender_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "amount",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "msg",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/PromiseOrValueString"
          }
        }
      },
      {
        "name": "ft_resolve_withdraw",
        "kind": "call",
        "modifiers": [
          "private"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "sender_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "amount",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "is_call",
              "type_schema": {
                "type": "boolean"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "string"
          }
        }
      },
      {
        "name": "ft_withdraw",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "receiver_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "amount",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "memo",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            {
              "name": "msg",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/PromiseOrValueString"
          }
        }
      },
      {
        "name": "has_public_key",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "public_key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "invalidate_nonces",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "nonces",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "null"
          }
        }
      },
      {
        "name": "is_nonce_used",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "nonce",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "mt_balance_of",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "string"
          }
        }
      },
      {
        "name": "mt_batch_balance_of",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_ids",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      {
        "name": "mt_batch_supply",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token_ids",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      {
        "name": "mt_batch_transfer",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "receiver_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_ids",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "amounts",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "approvals",
              "type_schema": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": [
                    {
                      "$ref": "#/definitions/AccountId"
                    },
                    {
                      "type": "integer",
                      "format": "uint64",
                      "minimum": 0.0
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              }
            },
            {
              "name": "memo",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          ]
        }
      },
      {
        "name": "mt_batch_transfer_call",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "receiver_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_ids",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "amounts",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "approvals",
              "type_schema": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": [
                    {
                      "$ref": "#/definitions/AccountId"
                    },
                    {
                      "type": "integer",
                      "format": "uint64",
                      "minimum": 0.0
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              }
            },
            {
              "name": "memo",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            {
              "name": "msg",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/PromiseOrValueArray_of_String"
          }
        }
      },
      {
        "name": "mt_on_transfer",
        "doc": " Deposit multi-tokens.\n\n `msg` contains [`AccountId`] of the internal recipient.\n Empty `msg` means deposit to `sender_id`",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "sender_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "previous_owner_ids",
              "type_schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/AccountId"
                }
              }
            },
            {
              "name": "token_ids",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "amounts",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "msg",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/PromiseOrValueArray_of_String"
          }
        }
      },
      {
        "name": "mt_resolve_transfer",
        "kind": "call",
        "modifiers": [
          "private"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "previous_owner_ids",
              "type_schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/AccountId"
                }
              }
            },
            {
              "name": "receiver_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_ids",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "amounts",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "approvals",
              "type_schema": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": "array",
                    "items": [
                      {
                        "$ref": "#/definitions/AccountId"
                      },
                      {
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0.0
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "maxItems": 3,
                    "minItems": 3
                  }
                }
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      {
        "name": "mt_resolve_withdraw",
        "kind": "call",
        "modifiers": [
          "private"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "sender_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_ids",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "amounts",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "is_call",
              "type_schema": {
                "type": "boolean"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      {
        "name": "mt_supply",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      {
        "name": "mt_token",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token_ids",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Token"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      },
      {
        "name": "mt_transfer",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "receiver_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "amount",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "approval",
              "type_schema": {
                "type": [
                  "array",
                  "null"
                ],
                "items": [
                  {
                    "$ref": "#/definitions/AccountId"
                  },
                  {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            },
            {
              "name": "memo",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          ]
        }
      },
      {
        "name": "mt_transfer_call",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "receiver_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "amount",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "approval",
              "type_schema": {
                "type": [
                  "array",
                  "null"
                ],
                "items": [
                  {
                    "$ref": "#/definitions/AccountId"
                  },
                  {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            },
            {
              "name": "memo",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            {
              "name": "msg",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/PromiseOrValueArray_of_String"
          }
        }
      },
      {
        "name": "mt_withdraw",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "receiver_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_ids",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "amounts",
              "type_schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "memo",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            {
              "name": "msg",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/PromiseOrValueArray_of_String"
          }
        }
      },
      {
        "name": "new",
        "kind": "call",
        "modifiers": [
          "init"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "fee",
              "type_schema": {
                "$ref": "#/definitions/Pips"
              }
            },
            {
              "name": "fee_collector",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "super_admins",
              "type_schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/AccountId"
                }
              }
            },
            {
              "name": "admins",
              "type_schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountId"
                  }
                }
              }
            },
            {
              "name": "grantees",
              "type_schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountId"
                  }
                }
              }
            },
            {
              "name": "staging_duration",
              "type_schema": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              }
            }
          ]
        }
      },
      {
        "name": "nft_on_transfer",
        "doc": " Deposit non-fungible token.\n\n `msg` contains [`AccountId`] of the internal recipient.\n Empty `msg` means deposit to `sender_id`",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "sender_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "previous_owner_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "msg",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/PromiseOrValueBoolean"
          }
        }
      },
      {
        "name": "nft_resolve_withdraw",
        "kind": "call",
        "modifiers": [
          "private"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "sender_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "is_call",
              "type_schema": {
                "type": "boolean"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "nft_withdraw",
        "kind": "call",
        "modifiers": [
          "payable"
        ],
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "receiver_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            },
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "memo",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            {
              "name": "msg",
              "type_schema": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/PromiseOrValueBoolean"
          }
        }
      },
      {
        "name": "pa_all_paused",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          }
        }
      },
      {
        "name": "pa_is_paused",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "pa_pause_feature",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "pa_storage_key",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        }
      },
      {
        "name": "pa_unpause_feature",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "public_keys_of",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "account_id",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          }
        }
      },
      {
        "name": "remove_public_key",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "public_key",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        }
      },
      {
        "name": "set_fee",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "fee",
              "type_schema": {
                "$ref": "#/definitions/Pips"
              }
            }
          ]
        }
      },
      {
        "name": "set_fee_collector",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "fee_collector",
              "type_schema": {
                "$ref": "#/definitions/AccountId"
              }
            }
          ]
        }
      },
      {
        "name": "simulate_intents",
        "kind": "view",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "intents",
              "type_schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/DefuseMessage_for_DefuseIntents"
                }
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "null"
          }
        }
      },
      {
        "name": "up_apply_update_staging_duration",
        "kind": "call"
      },
      {
        "name": "up_deploy_code",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "hash",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "function_call_args",
              "type_schema": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/FunctionCallArgs"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/Promise"
          }
        }
      },
      {
        "name": "up_get_delay_status",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$ref": "#/definitions/UpgradableDurationStatus"
          }
        }
      },
      {
        "name": "up_init_staging_duration",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "staging_duration",
              "type_schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          ]
        }
      },
      {
        "name": "up_stage_code",
        "kind": "call",
        "params": {
          "serialization_type": "borsh",
          "args": [
            {
              "name": "code",
              "type_schema": {
                "declaration": "Vec<u8>",
                "definitions": {
                  "Vec<u8>": {
                    "Sequence": {
                      "length_width": 4,
                      "length_range": {
                        "start": 0,
                        "end": 4294967295
                      },
                      "elements": "u8"
                    }
                  },
                  "u8": {
                    "Primitive": 1
                  }
                }
              }
            }
          ]
        }
      },
      {
        "name": "up_stage_update_staging_duration",
        "kind": "call",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "staging_duration",
              "type_schema": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          ]
        }
      },
      {
        "name": "up_staged_code",
        "kind": "view",
        "result": {
          "serialization_type": "borsh",
          "type_schema": {
            "declaration": "Option<Vec<u8>>",
            "definitions": {
              "()": {
                "Primitive": 0
              },
              "Option<Vec<u8>>": {
                "Enum": {
                  "tag_width": 1,
                  "variants": [
                    [
                      0,
                      "None",
                      "()"
                    ],
                    [
                      1,
                      "Some",
                      "Vec<u8>"
                    ]
                  ]
                }
              },
              "Vec<u8>": {
                "Sequence": {
                  "length_width": 4,
                  "length_range": {
                    "start": 0,
                    "end": 4294967295
                  },
                  "elements": "u8"
                }
              },
              "u8": {
                "Primitive": 1
              }
            }
          }
        }
      },
      {
        "name": "up_staged_code_hash",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "maxItems": 32,
            "minItems": 32
          }
        }
      },
      {
        "name": "up_storage_prefix",
        "kind": "view",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        }
      }
    ],
    "root_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "String",
      "type": "string",
      "definitions": {
        "AccountId": {
          "description": "NEAR Account Identifier.\n\nThis is a unique, syntactically valid, human-readable account identifier on the NEAR network.\n\n[See the crate-level docs for information about validation.](index.html#account-id-rules)\n\nAlso see [Error kind precedence](AccountId#error-kind-precedence).\n\n## Examples\n\n``` use near_account_id::AccountId;\n\nlet alice: AccountId = \"alice.near\".parse().unwrap();\n\nassert!(\"ƒelicia.near\".parse::<AccountId>().is_err()); // (ƒ is not f) ```",
          "type": "string"
        },
        "Deadline": {
          "oneOf": [
            {
              "description": "UNIX Timestamp in seconds",
              "type": "object",
              "required": [
                "timestamp"
              ],
              "properties": {
                "timestamp": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Block number",
              "type": "object",
              "required": [
                "block_number"
              ],
              "properties": {
                "block_number": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "DefuseMessage_for_DefuseIntents": {
          "type": "object",
          "required": [
            "deadline",
            "signer_id"
          ],
          "properties": {
            "deadline": {
              "$ref": "#/definitions/Deadline"
            },
            "intents": {
              "description": "Sequence of intents to execute in given order. Empty list is also a valid sequence, i.e. it doesn't do anything, but still invalidates the [`nonce`](crate::nep413::Nep413Payload::nonce) for the signer",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Intent"
              }
            },
            "signer_id": {
              "$ref": "#/definitions/AccountId"
            }
          }
        },
        "FunctionCallArgs": {
          "description": "Specifies a function call to be appended to the actions of a promise via [`near_sdk::Promise::function_call`]).",
          "type": "object",
          "required": [
            "amount",
            "arguments",
            "function_name",
            "gas"
          ],
          "properties": {
            "amount": {
              "description": "The amount of tokens to transfer to the receiver.",
              "type": "string"
            },
            "arguments": {
              "description": "The arguments to pass to the function.",
              "type": "array",
              "items": {
                "type": "integer",
                "format": "uint8",
                "minimum": 0.0
              }
            },
            "function_name": {
              "description": "The name of the function to call.",
              "type": "string"
            },
            "gas": {
              "description": "The gas limit for the function call.",
              "type": "string"
            }
          }
        },
        "Intent": {
          "oneOf": [
            {
              "description": "Add public key to the signer account",
              "type": "object",
              "required": [
                "intent",
                "public_key"
              ],
              "properties": {
                "intent": {
                  "type": "string",
                  "enum": [
                    "add_public_key"
                  ]
                },
                "public_key": {
                  "type": "string"
                }
              }
            },
            {
              "description": "Remove public key to the signer account",
              "type": "object",
              "required": [
                "intent",
                "public_key"
              ],
              "properties": {
                "intent": {
                  "type": "string",
                  "enum": [
                    "remove_public_key"
                  ]
                },
                "public_key": {
                  "type": "string"
                }
              }
            },
            {
              "description": "Invalidate given nonces TODO: error?",
              "type": "object",
              "required": [
                "intent",
                "nonces"
              ],
              "properties": {
                "intent": {
                  "type": "string",
                  "enum": [
                    "invalidate_nonces"
                  ]
                },
                "nonces": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "type": "object",
              "required": [
                "amounts",
                "intent",
                "receiver_id",
                "token_ids"
              ],
              "properties": {
                "amounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "intent": {
                  "type": "string",
                  "enum": [
                    "mt_batch_transfer"
                  ]
                },
                "memo": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "receiver_id": {
                  "$ref": "#/definitions/AccountId"
                },
                "token_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "type": "object",
              "required": [
                "amounts",
                "intent",
                "msg",
                "receiver_id",
                "token_ids"
              ],
              "properties": {
                "amounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "gas_for_mt_on_transfer": {
                  "description": "Optional static gas to attach to `mt_on_transfer`",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "intent": {
                  "type": "string",
                  "enum": [
                    "mt_batch_transfer_call"
                  ]
                },
                "memo": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "msg": {
                  "description": "`msg` to pass in `mt_on_transfer`",
                  "type": "string"
                },
                "receiver_id": {
                  "$ref": "#/definitions/AccountId"
                },
                "token_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "type": "object",
              "required": [
                "amount",
                "intent",
                "receiver_id",
                "token"
              ],
              "properties": {
                "amount": {
                  "type": "string"
                },
                "gas": {
                  "description": "Optional static gas to attach to `ft_transfer` or `ft_transfer_call`",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "intent": {
                  "type": "string",
                  "enum": [
                    "ft_withdraw"
                  ]
                },
                "memo": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "msg": {
                  "description": "Message to pass to `ft_transfer_call`. Otherwise, `ft_transfer` will be used",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "receiver_id": {
                  "$ref": "#/definitions/AccountId"
                },
                "token": {
                  "$ref": "#/definitions/AccountId"
                }
              }
            },
            {
              "type": "object",
              "required": [
                "intent",
                "receiver_id",
                "token",
                "token_id"
              ],
              "properties": {
                "gas": {
                  "description": "Optional static gas to attach to `nft_transfer` or `nft_transfer_call`",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "intent": {
                  "type": "string",
                  "enum": [
                    "nft_withdraw"
                  ]
                },
                "memo": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "msg": {
                  "description": "Message to pass to `nft_transfer_call`. Otherwise, `nft_transfer` will be used",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "receiver_id": {
                  "$ref": "#/definitions/AccountId"
                },
                "token": {
                  "$ref": "#/definitions/AccountId"
                },
                "token_id": {
                  "type": "string"
                }
              }
            },
            {
              "type": "object",
              "required": [
                "amounts",
                "intent",
                "receiver_id",
                "token",
                "token_ids"
              ],
              "properties": {
                "amounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "gas": {
                  "description": "Optional static gas to attach to `mt_batch_transfer` or `mt_batch_transfer_call`",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "intent": {
                  "type": "string",
                  "enum": [
                    "mt_withdraw"
                  ]
                },
                "memo": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "msg": {
                  "description": "Message to pass to `mt_batch_transfer_call`. Otherwise, `mt_batch_transfer` will be used",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "receiver_id": {
                  "$ref": "#/definitions/AccountId"
                },
                "token": {
                  "$ref": "#/definitions/AccountId"
                },
                "token_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "type": "object",
              "required": [
                "diff",
                "intent"
              ],
              "properties": {
                "diff": {
                  "$ref": "#/definitions/TokenAmounts_for_int128"
                },
                "intent": {
                  "type": "string",
                  "enum": [
                    "token_diff"
                  ]
                }
              }
            }
          ]
        },
        "PermissionedAccounts": {
          "description": "Collects super admin accounts and accounts that have been granted permissions defined by `AccessControlRole`.\n\n# Data structure\n\nAssume `AccessControlRole` is derived for the following enum, which is then passed as `role` attribute to `AccessControllable`.\n\n```rust pub enum Role { PauseManager, UnpauseManager, } ```\n\nThen the returned data has the following structure:\n\n```ignore PermissionedAccounts { super_admins: vec![\"acc1.near\", \"acc2.near\"], roles: HashMap::from([ (\"PauseManager\", PermissionedAccountsPerRole { admins: vec![\"acc3.near\", \"acc4.near\"], grantees: vec![\"acc5.near\", \"acc6.near\"], }), (\"UnpauseManager\", PermissionedAccountsPerRole { admins: vec![\"acc7.near\", \"acc8.near\"], grantees: vec![\"acc9.near\", \"acc10.near\"], }), ]) } ```\n\n# Uniqueness and ordering\n\nAccount ids returned in vectors are unique but not ordered.",
          "type": "object",
          "required": [
            "roles",
            "super_admins"
          ],
          "properties": {
            "roles": {
              "description": "The admins and grantees of all roles.",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/PermissionedAccountsPerRole"
              }
            },
            "super_admins": {
              "description": "The accounts that have super admin permissions.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountId"
              }
            }
          }
        },
        "PermissionedAccountsPerRole": {
          "description": "Collects all admins and grantees of a role.\n\n# Uniqueness and ordering\n\nAccount ids returned in vectors are unique but not ordered.",
          "type": "object",
          "required": [
            "admins",
            "grantees"
          ],
          "properties": {
            "admins": {
              "description": "The accounts that have admin permissions for the role.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountId"
              }
            },
            "grantees": {
              "description": "The accounts that have been granted the role.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountId"
              }
            }
          }
        },
        "Pips": {
          "description": "1 pip == 1/100th of bip == 0.0001%",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "Promise": true,
        "PromiseOrValueArray_of_String": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "PromiseOrValueBoolean": {
          "type": "boolean"
        },
        "PromiseOrValueString": {
          "type": "string"
        },
        "SignedPayload_for_MultiStandardPayload": {
          "type": "object",
          "anyOf": [
            {
              "type": "object",
              "required": [
                "public_key",
                "signature"
              ],
              "properties": {
                "public_key": {
                  "type": "string"
                },
                "signature": {
                  "type": "string"
                }
              }
            },
            {
              "type": "object",
              "required": [
                "signature"
              ],
              "properties": {
                "signature": {
                  "description": "Concatenated `r`, `s` and `v`",
                  "type": "string"
                }
              }
            }
          ],
          "oneOf": [
            {
              "type": "object",
              "required": [
                "message",
                "nonce",
                "recipient",
                "standard"
              ],
              "properties": {
                "callback_url": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "message": {
                  "type": "string"
                },
                "nonce": {
                  "type": "string"
                },
                "recipient": {
                  "type": "string"
                },
                "standard": {
                  "type": "string",
                  "enum": [
                    "nep413"
                  ]
                }
              }
            }
          ]
        },
        "Token": {
          "type": "object",
          "required": [
            "token_id"
          ],
          "properties": {
            "owner_id": {
              "anyOf": [
                {
                  "$ref": "#/definitions/AccountId"
                },
                {
                  "type": "null"
                }
              ]
            },
            "token_id": {
              "type": "string"
            }
          }
        },
        "TokenAmounts_for_int128": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "UpgradableDurationStatus": {
          "type": "object",
          "properties": {
            "new_staging_duration": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "new_staging_duration_timestamp": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "staging_duration": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "staging_timestamp": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    }
  }
}